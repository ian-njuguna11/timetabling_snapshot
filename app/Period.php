<?php

namespace Timetabler;

use Illuminate\Database\Eloquent\Model;
use Timetabler\Timetable\SessionsGenerator;

class Period extends Model
{
    protected $table = "periods";
    protected $fillable = [
        "day_id", "time"
    ];

    function day(){
        return $this->belongsTo(TimetableDay::class, "day_id", "id");
    }

    function sessions(){
        return $this->hasMany(Session::class, "period_id", "id");
    }

    function occupiedSessions(){
        return $this->sessions()->whereNotNull("unit_id");
    }

    function unoccupiedSessions(){
        return $this->sessions()->whereNull("unit_id");
    }

    public function levelsAssignedSessions(){
        return $this->occupiedSessions()->get()
            ->map(function ($session){
            $session->levels = $session->unit()->first()->levelsInSession()->get()->pluck('id')->flatten()->toArray();
            return $session;
        })->pluck('levels')->flatten()->toArray();
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created(function($period){
            // Create maximum possible sessions per period
            SessionsGenerator::createSession($period);
        });
    }

    function levels(){
        return $this->hasManyThrough(Unit::class, Session::class,
            "period_id",
            "");
    }
}
